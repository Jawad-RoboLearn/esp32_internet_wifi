[1/10] Performing build step for 'bootloader'
[1/1] cd /home/jawad/esp_projects/wifi_connect/build/bootloader/esp-idf/esptool_py && /home/jawad/.espressif/python_env/idf5.1_py3.9_env/bin/python /home/jawad/esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/jawad/esp_projects/wifi_connect/build/bootloader/bootloader.bin
Bootloader binary size 0x6740 bytes. 0x8c0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/internet_main.c.obj
[3/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/wifi_connect.c.obj
/home/jawad/esp_projects/wifi_connect/main/wifi_connect.c: In function 'wifi_connection_sta':
/home/jawad/esp_projects/wifi_connect/main/wifi_connect.c:40:12: warning: returning 'void *' from a function with return type 'esp_err_t' {aka 'int'} makes integer from pointer without a cast [-Wint-conversion]
   40 |     return NULL;
      |            ^~~~
[4/8] Linking C static library esp-idf/main/libmain.a
[5/8] Generating ld/sections.ld
[6/8] Linking CXX executable project-name.elf
[7/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /home/jawad/esp_projects/wifi_connect/build/project-name.bin
[8/8] cd /home/jawad/esp_projects/wifi_connect/build/esp-idf/esptool_py && /home/jawad/.espressif/python_env/idf5.1_py3.9_env/bin/python /home/jawad/esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/jawad/esp_projects/wifi_connect/build/partition_table/partition-table.bin /home/jawad/esp_projects/wifi_connect/build/project-name.bin
project-name.bin binary size 0xad160 bytes. Smallest app partition is 0x100000 bytes. 0x52ea0 bytes (32%) free.
